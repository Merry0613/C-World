#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <stdio.h>
#include <windows.h>
#include <algorithm>
#include <conio.h>
//콘솔창 초기화: system("cls");

int diff;
int locks=0;

int room[5][5]={0,};
int used[5][5]={0,};
int discover[5][5]={0,};
int locked[5][5]={0,};

//좌표인자들 
int x,y=0;
int ax,ay=0;

//시간정리 (턴은 남은 시간, 타임은 지나간 시간) 
int turn=100;
int time=0;

//아이템 
int keys=0;
int bucket=0;

//특수 조건들 
int coolant=0;
int Control=0;
int pipe=0;

//로그 입출력 담당(first=일어난 턴, second=한 행동) 
deque<pair<int,int>> log;

//다양하게 쓰이는 만능변수들
int i=0;
int j=0;
int o=0;
char chri=0;

void LogM(int a)
{
	int n=log.at(a).second;
	int m=log.at(a).first;
	if(n==1) printf("%d턴 전에 위치 이동됨\n",time-m);
	if(n==2) printf("%d턴 전에 아이템/정보 획득됨\n",time-m);
	if(n==3) printf("%d턴 전에 냉각수가 공급됨\n",time-m);
	if(n==4) printf("%d턴 전에 연결로가 토글됨\n",time-m);
	if(n==5) printf("%d턴 전에 공급실에서 공급 초기화됨\n",time-m);
}
int UpLog(int a, int b)
{
	if(log.size()>49)
	{
		log.pop();
	}
	log.push_back({a,b});
}
const char* Rn(int n)
{
	//다목적실=0 
	//발전소=-1
	//탈출구=-2
	//공구 창고=1
	//공급실=2
	//냉각수 탱크=3
	//파이프실=4 
	//제어실=5
	//연결로 통제실=6 
	//정보실 =7
	
	if(n==-2) return "탈출구";
	if(n==-1) return "발전소";
	if(n==0) return "다목적실";
	if(n==1) return "공구 창고";
	if(n==2) return "공급실";
	if(n==3) return "냉각수 탱크";
	if(n==4) return "파이프실";
	if(n==5) return "제어실";
	if(n==6) return "연결로 통제실";
	if(n==7) return "정보실";
}
int information()
{
	i=0;
	while(1)
	{
		ax=rand()%5;
		ay=rand()%5;
		i++;
		if(room[ay][ax]!=0 and discover[ay][ax]==0 or i>99)
		{
			break;
		}
	}
	printf("%c-%d에 %s이(가) 있다.\n",ay+65,ax+1,Rn(room[ax][ay]));
}
int use(int n)
{
	if(n==-2)
	{
		if(coolant==1)
		{
			system("cls");
			printf("트루 엔딩 - 영웅\n당신은 냉각수를 공급하고 탈출하여 발전소의 수명을 늘리는 데에 성공했습니다.");
			return 0;
		}
		else
		{
			system("cls");
			printf("배드 엔딩 - 무책임\n당신은 탈출하긴 했지만 사고의 방관자로 10년의 징역형을 선고받았습니다.");
			return 0;
		}
	}
	if(n==-1)
	{
		if(bucket==-1 and coolant==0)
		{
			Uplog(time,3);
			printf("적당한 양의 냉각수를 양동이에 공급했습니다.\n");
			bucket=1;
			coolant=1;
		}
		else if(coolant==1)
		{
			printf("발전소에는 이미 적당한 양의 냉각수가 있습니다.\n");
		}
		else
		{
			printf("여기서 더 할 수 있는 게 없습니다.\n");
		}
	}
	if(n==1)
	{
		if(used[x][y]==0)
		{
			Uplog(time,2); 
			
			i=rand()%4+1;
			keys++;
			printf("마스터키를 1개 획득했습니다!\n");
			if(i==1)
			{
				printf("마스터키를 1개 더 획득했습니다!\n");
				keys++; 
			}
			if(i==2)
			{
				printf("정보가 담긴 쪽지를 획득했습니다!\n");
					printf("   쪽지에 무언가 적혀 있습니다...");
					information();
			}
			if(i==3)
			{
				if(bucket==0 and diff==1)
				{
					printf("양동이를 획득했습니다!\n");
					bucket=1;
				}
				else
				{
					printf("마스터키를 1개 더 획득했습니다!\n");
					keys++; 
				}
			}
			if(i==4)
			{
				printf("임시 냉각수를 획득했습니다! 폭파까지의 턴이 5 증가합니다.\n");
				turn+=5;
			}
			used[x][y]=1;
		}
		else
		{
			printf("\n이미 사용된 곳입니다.\n");
		}
	}
	if(n==2)
	{
		Uplog(time,5); 
		printf("공급 초기화 중...\n");
		i=0;
		j=0;
		while(i<5)
		{
			j=0;
			while(j<5)
			{
				used[i][j]=0;
				j++;
			}
			i++;
		}
		Sleep(300);
		printf("공급이 초기화되었습니다.\n");
	}
	if(n==3)
	{
		if(bucket==1)
		{
			printf("양동이에 냉각수를 담았습니다.\n");
			bucket=-1;
		}
		else
		{
			printf("여기서 더 할 수 있는 게 없습니다.\n");
		}
	}
	if(n==4)
	{
		if(coolant==0 and pipe==1)
		{
			if(Control==1)
			{
				printf("연결로가 통제되어 있어 공급이 불가능합니다.\n");
			}
			else if(coolant==0)				
			{
				Uplog(time,3); 
					printf("발전실에 냉각수가 공급되었습니다.\n");
				coolant=1;
			}
		}
	}
	if(n==5)
	{
			printf("원격 상호작용할 방의 행 : ");
			chri=getche();
			ax=chri-65;
			printf("\n원격 상호작용할 방의 열 : ");
			scanf("%d",&ay);
		if(discover[ay][ax-1]==0)
		{
			printf("밝혀지지 않은 구역입니다.\n");
		}
		else if(ax==x and y==ay)
		{
			printf("이미 그 방에 있습니다.");
		 } 
		else if(room[ay][ax-1]==5)
		{
			printf("제어실은 제어할 수 없습니다.\n");
		}
		else
		{
			use(room[ay][ax-1]);
		}
	}
	if(n==6)
	{
		Uplog(time,4);
		 
		if(Control==0)
		{
			printf("연결로가 차단되었습니다.\n");
			Control=1;
		}
		else
		{
			printf("연결로가 열렸습니다.\n	");
			Control=0;
		}
	}
	if(n==7)
	{
		if(used[y][x]==0)
		{
			Uplog(time,2); 
			printf("정보가 담긴 수첩을 획득했습니다!\n");
				printf("   수첩에 무언가 적혀 있습니다...\n");
				information();
				information();
			used[y][x]=1;
		}
		else
		{
			printf("\n이미 사용된 곳입니다.\n");
		}
	}
	return 0;
}

int mr(int n)
{
	srand(time(NULL));
	while(1)
	{
		int i=rand()%6;
		int j=rand()%6;
		if(room[i][j]==0)
		{
			room[i][j]=n;
			break;
		}
	}
}
int main()
{
	printf("난이도[일반:A/익스트림:B] : ");
	scanf("%c",&chri);
	if(chri=='B')
	{
		diff=2;
		printf("난이도가 익스트림으로 선택되었습니다.");
		turn=20;
		Control=1;
		locks=5;
	}
	else
	{
		diff=1;
		printf("난이도가 일반으로 선택되었습니다.");
		turn=40;
		locks=3;
	}
	
	printf("\n조작:[이동:WASD / 상호작용:Z]");
	Sleep(900);
	
	system("cls");
	
	room[2][2]=-1;
	
	i=rand()%5;
	if(i==0)
		room[0][2]=-2;
	else if(i==1)
		room[4][2]=-2;
	else if(i==2)
		room[2][0]=-2;
	else if(i==3)
		room[2][4]=-2;
		
	mr(1);
	mr(1);
	mr(2);
	mr(3);
	mr(3);
	mr(4);
	mr(5);
	mr(6);
	mr(7);
	
	i=0;
	j=0;
	while(locks--)
	{
		while(1)
		{
			int i=rand()%6;
			int j=rand()%6;
			if(room[i][j]!=-1 and room[i][j]!=-2 and room[i][j]!=1 and room[i][j]!=3 and locked[i][j]!=1)
			{
				locked[i][j]=1;
				break;
			}
		}
	}

	x=2;
	y=2;
	
	while(1)
	{
		printf("남은 시간 : %d\n",turn);
		printf("현재 위치 : %s\n",Rn(room[x][y]));
		discover[y][x]=1;
		discover[y+1][x]=1;
		discover[y-1][x]=1;
		discover[y][x+1]=1;
		discover[y][x-1]=1;
		if(room[y][x]==3)
		{
			pipe=1;
		}
		i=0;
		j=0;
		printf("  1 2 3 4 5\n");
		while(i<5)
		{
			printf("%c ",i+65);
			j=0;
			while(j<5)
			{
				if(i==y and j==x)
				{ 
					printf("■");
				}
				else if(discover[i][j]==1 and locked[i][j]==1)
				{
					printf("▣");
				}
				else
				{
					printf("▩");
				}
				j++;
			}
			printf("\n");
			i++;
		}
		printf("[최신 로그]");
		LogM(1);
		LogM(2);
		LogM(3);
		while(1)
		{
			chri=getch();
			if(chri=='W' and y>0)
			{
				if(locked[y-1][x]==1)
				{
					if(keys>0)
					{
						locked[y-1][x]=0;
						keys--;
					}
					else
					{
						printf("잠겨 있습니다.\n");
					}
				}
				else
				{
					Uplog(time,1);
					
					y--;
					break;
				}
			}
			else if(chri=='D' and x<=5)
			{
				if(locked[y][x+1]==1)
				{
					if(keys>0)
					{
						locked[y][x+1]=0;
						keys--;
					}
					else
					{
						printf("잠겨 있습니다.\n");
					}
				}
				else
				{
					Uplog(time,1);
					
					x++;
					break;
				}
			}
			else if(chri=='A' and x>0)
			{
				if(locked[y][x-1]==1)
				{
					if(keys>0)
					{
						locked[y][x-1]=0;
						keys--;
					}
					else
					{
						printf("잠겨 있습니다.\n");
					}
				}
				else
				{
					Uplog(time,1);
					
					x--;
					break;
				}
			}
			else if(chri=='S' and y<=5)
			{
				if(locked[y+1][x]==1)
				{
					if(keys>0)
					{
						locked[y+1][x]=0;
						keys--;
					}
					else
					{
						printf("잠겨 있습니다.\n");
					}
				}
				else
				{
					Uplog(time,1);
					
					y++;
					break;
				}
			}
			else if(chri=='Z')
			{
				use(room[x][y]);
				
			}
		}
		system("cls");
		
		time++;
		turn--;
		
		if(turn<=0)
		{
			if(coolant==0)
			{
				printf("배드 엔딩 - 발전소 폭발\n당신은 결국 발전소의 폭발을 막지 못했습니다.");
			}
			else
			{
				printf("배드 엔딩 - 탈출 실패\n당신은 결국 탈출하지 못해 오랫동안 갇혀 아사했습니다.");
			}
			return 0; 
		}
	}
	
}
