#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
#include <conio.h>
#include <windows.h>
//게임 특징:
// 적을 처치하면서 탐험하는 턴제형 RPG
// 전투가 끝날 때마다 특수 능력이 있는 보물 획득
//플레이 캐릭터는 점점 늘어남

//전역변수 
	//적 레벨 설정(적 캐릭터는 점점 강해짐)
		int level=1; 
	//차례 카운트용 변수 선언 
		int turn;
	//플레이어 능력치용 변수 
		char act;
		int maxhp=100;
		int hp=100;
		int atk=5;
		int got[20];
		int scroll[20];
		int gotcount=0;
		int scorgot=0;
	//적 캐릭터 능력치용 변수 
		int xhp;
		int xatk;
		char xname[100];
		int xnum; 
	//기타 변수
		int i;
		int j;
		int o;
		int k;
	//key관련 변수
		int keyf;
		int skillkey[30];
void Check();
void Enemy_act()
{
	if(1<xhp)
	{ 
		printf("\n");
		Sleep(300);
		i=rand()%4;
		if(xnum==1)
		{
			printf("%s의 공격!",xname);
			Sleep(500);
			printf("\n플레이어에게 %d만큼의 피해를 입혔다.\n",xatk);
			hp-=xatk;
		}
		if(xnum==2)
		{
			printf("%s의 공격!",xname);
			Sleep(500);
			printf("\n플레이어에게 %d만큼의 피해를 입혔다.\n",xatk);
			hp-=xatk;
		}
		Check();
	}
}
void Check()
{
	if(maxhp<hp)
	{
		hp=maxhp;
	}
	i=0;
	keyf=0;
	while(i<=20)
	{
		if(scroll[i]==1)
		{
			skillkey[i]=67+keyf;
			keyf++;
		}
		i++;
	}
}
void gotf()
{
	if(got[0]==1)
	{
		printf("침낭:휴식이 체력을 5 더 회복시킵니다.");
	}
	if(got[1]==1)
	{
		printf("신성한 베개:휴식으로 초과해 회복할 때마다 최대 체력을 1 증가시킵니다.");
	}
	if(got[2]==1)
	{
		printf("탐욕의 열쇠:공격력을 5 얻습니다. 적들이 약간 더 강해집니다.");
	}
}
void skinf()
{
	printf("  [\n");
	printf("   공격:A\n");
	printf("   휴식:B\n");
	
	
	
	printf("  ]\n");
}
int Got()
{
	Sleep(400);
	printf("\n무작위 보물을 획득할 수 있습니다! [기술:A / 지속 효과:B]");
	Sleep(400);
	scorgot=getch();
	if(scorgot==65 or scorgot==97)
	{
		i=rand()%11;
		printf("\n기술을 획득했습니다.");
		scroll[i]=1; 
	}
	if(scorgot==66 or scorgot==98)
	{
		i=rand()%3;
		printf("\n지속 효과를 획득했습니다.");
		got[i]=1;
		if(i==2)
		{
			atk+=5;
			level+=5;
		}
	}
	Check();
	return 0;
}
int fight()
{
	printf("무엇을 하시겠습니까?\n\n");
	act=getch();
	Sleep(100);
	if(act==65 or act==97)
		{
			printf("플레이어의 공격!\n");
			printf("%s에게 %d만큼의 피해를 입혔다.\n",xname,atk);
			xhp-=atk;
		}
	if(act==66 or act==98)
		{
			printf("플레이어는 휴식하고 있다...\n");
			if(got[0]==1)
			{
				printf("플레이어는 체력을 15만큼 회복했다.\n");
				hp+=15;
			}
			else
			{
				printf("플레이어는 체력을 10만큼 회복했다.\n");
				hp+=10;
			}
			if(hp>maxhp)
			{
				maxhp++;
			}
		}
	if(got[0]==1)
	{
		if(act==81)
			{
				printf("플레이어의 흡혈격!\n");
				printf("%s에게 %d만큼의 피해를 입혔다.\n",xname,atk*0.7);
				printf("플레이어는 체력을 10만큼 회복했다.\n",atk*0.2);
				xhp-=atk*0.7;
				hp+=atk*0.2;
			}
	}
	Check();
	Sleep(100);
}
int main()
{
	i=0;
	printf("기본 설명을 들으시겠습니까?[예: A / 아니오: B]\n");
	i=getch();
	Sleep(400);
	if(i==65)
	{
		printf("\n\n이곳은 미궁입니다.");
		Sleep(1200);
		printf("\n아주 끔찍한 곳이죠.");
		Sleep(1200);
		printf("\n귀하가 살아남으려면 다양한 적들과 전투해야 합니다.");
		Sleep(1200);
		printf("\n이 미궁의 적들은 점차 강해집니다.");
		Sleep(1200);
		printf("\n참 친절하기도 하죠?");
		Sleep(1200);
		printf("\n그럼 이만, 악착같이 생존하시길 바랍니다.\n");
		Sleep(1200);
	}
	//랜덤 시드 설정
		srand(time(NULL));
	while (1)
	{
		printf("\n...\n");
		Sleep(rand()%10*100+500);
		if (level>20)
		{
			break;
		}
		else
		{
			//i=적 종류(일시적)
			i=rand()%level+1;
			if(i<5)
			{
				strcpy(xname,"썩어가는 병사");
				xnum=1;
				xhp=rand()%10+10;
				xatk=rand()%2+5;
			}
			else if(i<10)
			{
				strcpy(xname,"구울");
				xnum=2;
				xhp=rand()%15+15;
				xatk=rand()%6+5;
			}
		}
			printf("\n%s이(가) 나타났다!\n",xname);
			printf("  조작법:[행동:A,능력치 확인:B,기술 확인:C,지속 효과 확인:D]\n");
			while(xhp>0)
			{	
			printf("\n정보를 확인하거나,행동을 준비하세요.\n\n");
			act=getch();
			Sleep(400);
			while (1)
			{
					if(act==65 or act==97)
					{
						fight();
						Enemy_act();
						break;
					}
					else if(act==66 or act==98)
					{
						printf("내 최대 체력 : %d\n",maxhp);
						printf("내 체력 : %d\n",hp);
						printf("내 공격력 : %d\n",atk);
						printf("적 체력 : %d\n",xhp);
						printf("적 공격력 : %d\n",xatk);
						break;
					}
					else if(act==67 or act==99)
					{
						skinf();
						break;
					}
					else if(act==68 or act==100)
					{
						gotf();
						break;
					}
					else
					{
						act=getch();
					}
				}
				Sleep(400);
			}
		level++;
		gotcount++;
		printf("\n%s을 처치하는 데 성공했다.\n",xname);
		if(gotcount==3)
		{
			Got();
		}
		Sleep(1200);
	}
}
